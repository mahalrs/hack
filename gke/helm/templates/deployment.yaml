apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webapp
  name: webapp
  namespace: webapp
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: webapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: webapp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: PORT
              value: "8080"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 512Mi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
